name: redmi-ax6000-padavanonly-23.05

permissions: write-all

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-23.05
  REPO_BRANCH: openwrt-23.05
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: redmi-ax6000/padavanonly-23.05/config/default.config
  DIY_P1_SH: redmi-ax6000/padavanonly-23.05/diy/diy-part1.sh
  DIY_P2_SH: redmi-ax6000/padavanonly-23.05/diy/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  OPENWRT_NAME: AX6000

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: 检查项目分支
      uses: actions/checkout@v3

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo bash -c 'bash <(curl -sL https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 清理磁盘空间(Ubuntu)
      uses: jlumbroso/free-disk-space@v1
      with:
        tool-cache: true
        android: false
        dotnet: false
        haskell: false
        large-packages: false
        swap-storage: false

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载feeds.conf.default & DIY_P1_SH
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: 更新 & 安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载config & DIY_P2_SH
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSH链接管理
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: 下载安装包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "FILE_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件并重命名
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: | 
        cd openwrt/bin/targets/*/*
        rm -rf packages
        sudo -E apt-get -qq install rename
        rename 's/immortalwrt-mediatek-mt7986-/AX6000-${{ env.FILE_DATE }-/' *
        rename 's/ax6000/ax6000-spi_nand-512m/' *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件到github
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.OPENWRT_NAME }}-${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 生成release标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=v${{ env.FILE_DATE }}" >> $GITHUB_OUTPUT
        touch release.txt
        echo "固件版本: v${{ env.FILE_DATE }}" >> release.txt
        echo "固件IP: 172.16.1.1" >> release.txt
        echo "存储配置: 512MB SPI NAND" >> release.txt
        echo "源码分支: ${{ env.REPO_BRANCH }}" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 发布至release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.FIRMWARE }}/*
        name: ${{ env.OPENWRT_NAME }}-v${{ env.FILE_DATE }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
